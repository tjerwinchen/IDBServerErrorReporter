__author__ = 'theochen'

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from IDBServerErrorReporterConfig import Config

class MailSender(object):
    def __init__(self):
        self.smtp = smtplib.SMTP(Config.mail_smarthost)

    def create_message(self, scanner):
        # Create the body of the message (a plain-text and an HTML version).
        text = scanner.error_text
        html = u'''
<html>
<head>
    <title>IDB Server Error Report</title>
</head>
<table><tr><td style="color: red; background-color: ghostwhite;"><b>Note:</b> This mail was auto-generated by IDB Server Error Reporter. Please DO NOT REPLY this email directly.</td></tr>
<tr><td style="background-color: ghostwhite">FYI,<br><br>
We detected %d new errors occurs in IDB server currently. Please refer the details for your reference.<br><br>

Regards,<br><br>
IDB Server Error Reporter<br><br>

<i>P.S. If you fell you have received this email in error, please contact your supervisor.<i>

</td></tr></table>
%s
</html>
        ''' % (scanner.error_count, scanner.error_html)

        import codecs
        # Record the MIME types of both parts - text/plain and text/html.
        # print text

        part1 = MIMEText(text, 'plain', 'utf-8')
        part2 = MIMEText(html, 'html', 'utf-8')

        # Create message container - the correct MIME type is multipart/alternative.
        msg = MIMEMultipart('alternative')
        msg['Subject'] = u'[IDB Error Reporter] %s Error occurs in IDB Server' % scanner.error_count
        msg['From'] = Config.mail_from
        msg['To'] = ",".join(email for email in Config.mail_receiptants)

        # Attach parts into message container.
        # According to RFC 2046, the last part of a multipart message, in this case
        # the HTML message, is best and preferred.
        msg.attach(part1)
        msg.attach(part2)

        return msg


    def sending_email(self, scanner):
        msg = self.create_message(scanner)
        smtp = smtplib.SMTP(Config.mail_smarthost)
        smtp.login(Config.auth_user, Config.auth_passwd)
        smtp.sendmail(Config.mail_from, Config.mail_receiptants, msg.as_string())
        smtp.quit()
        print u'mail send to [%s]' % ", ".join(Config.mail_receiptants)

